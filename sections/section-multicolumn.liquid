{%- liquid
  assign unique = section.id
  assign blocks_size = section.blocks.size
  assign section_width = section.settings.width
  assign layout_mobile = section.settings.layout_mobile
  assign text_color = section.settings.text_color
  assign align_heading = section.settings.align_heading
  assign align_text = section.settings.align_text
  assign heading_size = section.settings.heading_size | times: 0.01
  assign text_size = section.settings.text_size | times: 0.01
  assign section_title = section.settings.title
  assign section_text = section.settings.text
  assign bg_color = section.settings.bg_color
  assign id = 'SectionMulticolumns--' | append: section.id
  assign selector_id = '#' | append: id
  assign animation_anchor = selector_id
  assign animations_enabled = settings.animations_enabled
  assign animation_delay = 150

  assign one_third_blocks_only = false
  assign one_third_block_count = 0

  for block in section.blocks
    if block.settings.column_width == 33
      assign one_third_block_count = one_third_block_count | plus: 1
    endif
  endfor

  if one_third_block_count == blocks_size
    assign one_third_blocks_only = true
  endif

  case layout_mobile
    when 'grid'
      assign mobile_width = 'mobile--one-half'
      assign mobile_class = 'grid--mobile'
    when 'stacked'
      assign mobile_width = 'mobile--one-whole'
      assign mobile_class = 'stacked--mobile'
    when 'carousel'
      assign mobile_class = 'carousel--mobile'
  endcase
-%}

{%- style -%}
  {{ selector_id }} {
    --PT: {{ section.settings.padding_top }}px;
    --PB: {{ section.settings.padding_bottom }}px;
    --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size }});
    --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ text_size }});

    {%- if bg_color.alpha != 0.0 and bg_color != '' -%}
      --bg: {{ bg_color }};
    {%- endif -%}
  }
{%- endstyle -%}

<div id="{{ id }}"
  class="section-padding section-columns section-columns--multicolumn {{ text_color }}"
  data-section-id="{{ unique }}"
  data-section-type="multicolumns">
  <div class="{{ section_width }}">
    {%- if section_title != '' or section_text != '' -%}
      <div class="section__header {{ align_heading }}">
        {% if section_title != '' %}
          <h2 class="section__heading h2"
            {% if animations_enabled %}
              data-aos="fade-up"
              data-aos-anchor="{{ animation_anchor }}"
              data-aos-delay="{{ animation_delay }}"
              {%- assign animation_delay = animation_delay | plus: 150 -%}
            {% endif %}>
            {{- section_title -}}
          </h2>
        {% endif %}

        {% if section_text != '' %}
          <div class="section__text"
            {% if animations_enabled %}
              data-aos="fade-up"
              data-aos-anchor="{{ animation_anchor }}"
              data-aos-delay="{{ animation_delay }}"
              {%- assign animation_delay = animation_delay | plus: 150 -%}
            {% endif %}>
            {{- section_text -}}
          </div>
        {% endif %}
      </div>
    {%- endif -%}

    <div class="section-columns__wrapper carousel__container {{ align_text }}">
      {%- if blocks_size > 0 -%}
        <div class="section-columns__slider {{ mobile_class }}" data-slider>
          {%- for block in section.blocks -%}
            {%- liquid
              assign bg_color = block.settings.bg_color
              assign column_width = block.settings.column_width

              if one_third_blocks_only
                assign column_width = 33.333333
              endif

              assign has_background = false
              if bg_color.alpha != 0.0 and bg_color != '' and bg_color != blank
                assign has_background = true
              endif

              assign render_item = true

              if block.type == 'text'
                assign subheading = block.settings.subheading
                assign title = block.settings.title
                assign text = block.settings.text
                assign button_text = block.settings.button_text

                if subheading == blank and title == blank and text == blank and button_text == blank
                  assign render_item = false
                endif
              elsif block.type == 'menu'
                assign menu = block.settings.menu

                if menu == blank
                  assign render_item = false
                endif
              endif
            -%}
            {%- if render_item -%}
              {% if has_background %}
                {%- style -%}
                  #columnItem--{{ block.id }} { --bg: {{ bg_color }}; }
                {%- endstyle -%}
              {% endif %}
              <div class="column-item column-item--{{ block.type }}{% if has_background %} column-item--boxed{% endif %} carousel__item {{ mobile_width }}" {{ block.shopify_attributes }} style="--desktop-width: {{ column_width | append: '%' }};" id="columnItem--{{ block.id }}">
                <div class="column-item__inner"
                {% if animations_enabled %}
                  data-aos="fade-up"
                  data-aos-anchor="{{ animation_anchor }}"
                  data-aos-delay="{{ animation_delay }}"
                  {%- assign animation_delay = animation_delay | plus: 150 -%}
                {% endif %}>
                  {%- case block.type -%}
                    {%- when 'text' -%}
                      {%- liquid
                        assign button_link = block.settings.button_link
                        assign button_style = block.settings.button_style
                        assign button_color = block.settings.button_color
                        assign button_size = block.settings.button_size
                        assign heading_size = block.settings.heading_size | times: 0.01
                        assign text_size = block.settings.text_size | times: 0.01
                        assign text_color = block.settings.text_color
                      -%}
                      {%- style -%}
                        #columnItemContent--{{ block.id }} {
                          --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size }});
                          --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ text_size }});
                        }
                      {%- endstyle -%}
                      <div class="column-item__content {{ text_color }}{%- render 'button-fallback-classes', primary_color: button_color, section_bg_color: bg_color -%}" id="columnItemContent--{{ block.id }}">
                        {%- if subheading != blank -%}
                          <h6 class="column-item__subheading subheading-text">{{ subheading | escape }}</h6>
                        {%- endif -%}

                        {%- if title != blank -%}
                          <h3 class="column-item__heading">{{ title | escape }}</h3>
                        {%- endif -%}

                        {%- if text != blank -%}
                          <div class="column-item__text">{{ text }}</div>
                        {%- endif -%}

                        {%- if button_text != '' -%}
                          <a href="{{ button_link }}" class="column-item__button btn {{ button_style }} {{ button_size }} {{ button_color }}">
                            {{- button_text -}}
                          </a>
                        {%- endif -%}
                      </div>
                    {%- when 'image' or 'collection' -%}
                      {%- liquid
                        assign image = block.settings.image
                        assign aspect_ratio_desktop = block.settings.aspect_ratio_desktop | times: 100
                        assign aspect_ratio_mobile = block.settings.aspect_ratio_mobile | times: 100
                        assign button_link = block.settings.button_link
                        assign button_text = block.settings.button_text | default: ''
                        assign button_style = block.settings.button_style
                        assign button_color = block.settings.button_color
                        assign button_size = block.settings.button_size
                        assign title = block.settings.title
                        assign heading_size = block.settings.heading_size | times: 0.01
                        assign text = block.settings.text
                        assign text_size = block.settings.text_size | default: 100 | times: 0.01
                        assign image_link = false

                        if button_link != blank and button_text == blank
                          assign image_link = true
                        endif

                        if image != blank
                          assign image_alt = image.alt | default: title | strip_html | escape
                        endif

                        comment
                          Collection block
                        endcomment

                        if block.type == 'collection'
                          assign collection = collections[block.settings.collection]
                          assign collection_string = 'homepage.onboarding.collection_title' | t
                          assign title = block.settings.title | default: collection.title | default: collection_string
                          assign button_link = collection.url
                          assign show_products_count = block.settings.show_products_count

                          if image == blank
                            assign image = collection.image | default: collection.products.first.featured_media.preview_image | default: false
                            assign image_alt = image.alt | default: title | strip_html | escape
                          endif

                          unless button_link == blank
                            assign image_link = true
                          endunless

                          if show_products_count
                            assign products_count = collection.all_products_count | default: 0
                            assign text = 'general.search.results_products_with_count' | t: count: products_count
                          endif
                        endif

                        comment
                          Images sizes
                        endcomment

                        assign column_width_multiplier = column_width | times: 0.01

                        # Desktop widths
                        if section_width == 'wrapper--full-padded'
                          assign wrapper_width_lg = '(100vw - 120px)'
                        else
                          assign wrapper_width_lg = '(1440px - 120px)'
                        endif
                        assign img_width_lg = 'calc(' | append: wrapper_width_lg | append: ' * ' | append: column_width_multiplier | append: ' - 20px)'

                        # Mobile widths
                        assign wrapper_width_md = '(100vw - 2 * 20px)'
                        assign img_width_md = 'calc(' | append: wrapper_width_md | append: ' / 2 - 20px)'

                        # Mobile portrait widths
                        assign img_width_sm = 'calc' | append: wrapper_width_md

                        if mobile_class == 'grid--mobile'
                          assign img_width_sm = 'calc(' | append: wrapper_width_md | append: ' / 2 - 20px)'
                        elsif mobile_class == 'carousel--mobile'
                          assign img_width_sm = 'calc(' | append: wrapper_width_md | append: ' - 20px)'
                        endif

                        assign sizes = '(min-width: 768px) ' | append: img_width_lg | append: ', (min-width: 480px) ' | append: img_width_md | append: ', ' | append: img_width_sm
                      -%}
                      {%- style -%}
                        #columnItemImage--{{ block.id }} {
                          --image-ratio-desktop: {{ aspect_ratio_desktop }}%;
                          --image-ratio-mobile: {{ aspect_ratio_mobile }}%;
                        }
                        #columnItemContent--{{ block.id }} {
                          --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ heading_size }});
                          --adjust-body: calc(var(--FONT-ADJUST-BODY) * {{ text_size }});
                        }
                      {%- endstyle -%}
                      <div class="column-item__image-wrapper" id="columnItemImage--{{ block.id }}" data-media-container>
                        {%- if image_link -%}
                          <a href="{{ button_link }}" class="column-item__image-link hover-scale">
                        {%- endif -%}
                          {%- render 'image-fill', is_background: true, img_object: image, sizes: sizes, classes: 'column-item__image', alt: image_alt -%}
                        {%- if image_link -%}
                          </a>
                        {%- endif -%}
                      </div>
                      <div class="column-item__content{%- render 'button-fallback-classes', primary_color: button_color -%}" id="columnItemContent--{{ block.id }}">
                        {%- if title != blank -%}
                          <h3 class="column-item__heading h6">{{ title | escape }}</h3>
                        {%- endif -%}

                        {%- if text != blank -%}
                          <div class="column-item__text">{{ text }}</div>
                        {%- endif -%}

                        {%- if button_text != '' -%}
                          <a href="{{ button_link }}" class="column-item__button btn {{ button_style }} {{ button_size }} {{ button_color }}">
                            {{- button_text -}}
                          </a>
                        {%- endif -%}
                      </div>
                    {%- when 'menu' -%}
                      {%- liquid
                        assign text_size = block.settings.text_size | times: 0.01
                      -%}
                      {%- style -%}
                        #columnItemMenu--{{ block.id }} {
                          --adjust-heading: calc(var(--FONT-ADJUST-HEADING) * {{ text_size }});
                        }
                      {%- endstyle -%}
                      <div class="column-item__links" id="columnItemMenu--{{ block.id }}">
                        {%- for link in linklists[menu].links -%}
                          <div class="column-item__link h3">
                            <a href="{{ link.url }}">{{ link.title }}</a>
                          </div>
                        {%- endfor -%}
                      </div>
                    {%- else -%}
                      {%- render 'no-blocks' -%}
                  {%- endcase -%}
                </div>
              </div>
            {%- endif -%}
          {%- endfor -%}
        </div>
      {%- endif -%}
    </div>
  </div>
</div>

{% schema %}
  {
    "name": "Multicolumn",
    "class": "index-section",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Heading"
      },
      {
        "type": "range",
        "id": "heading_size",
        "label": "Heading size",
        "default": 120,
        "min": 70,
        "max": 200,
        "step": 10,
        "unit": "%"
      },
      {
        "type": "richtext",
        "id": "text",
        "label": "Text"
      },
      {
        "type": "range",
        "id": "text_size",
        "label": "Text size",
        "default": 100,
        "min": 75,
        "max": 175,
        "step": 5,
        "unit": "%"
      },
      {
        "type": "header",
        "content": "Layout"
      },
      {
        "type": "select",
        "id": "align_heading",
        "label": "Heading alignment",
        "default": "text-left",
        "options": [
          { "value": "text-left", "label": "Left" },
          { "value": "text-center", "label": "Centered" }
        ]
      },
      {
        "type": "select",
        "id": "align_text",
        "label": "Text alignment",
        "default": "text-left",
        "options": [
          { "value": "text-left", "label": "Left" },
          { "value": "text-center", "label": "Centered" }
        ]
      },
      {
        "type": "header",
        "content": "Colors"
      },
      {
        "type": "color",
        "id": "bg_color",
        "label": "Background"
      },
      {
        "type": "select",
        "id": "text_color",
        "label": "Text",
        "default": "text-dark",
        "options": [
          {
            "value": "text-light",
            "label": "Light"
          },
          {
            "value": "text-dark",
            "label": "Dark"
          }
        ]
      },
      {
        "type": "header",
        "content": "Mobile"
      },
      {
        "type": "select",
        "id": "layout_mobile",
        "label": "Layout",
        "default": "stacked",
        "options": [
          { "value": "grid", "label": "Grid" },
          { "value": "stacked", "label": "Stacked" },
          { "value": "carousel", "label": "Slider" }
        ]
      },
      {
        "type": "header",
        "content": "Section spacing"
      },
      {
        "type": "select",
        "id": "width",
        "label": "Width",
        "default": "wrapper--full-padded",
        "options": [
          { "value": "wrapper--full-padded", "label": "Full width padded" },
          { "value": "wrapper", "label": "Page width" }
        ]
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding top",
        "default": 60
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding bottom",
        "default": 60
      }
    ],
    "blocks": [
      {
        "type": "text",
        "name": "Text",
        "settings": [
          {
            "type": "range",
            "id": "column_width",
            "label": "Column width",
            "unit": "%",
            "min": 10,
            "max": 100,
            "step": 1,
            "default": 25,
            "info": "Desktop only"
          },
          {
            "type": "header",
            "content": "Typography"
          },
          {
            "type": "text",
            "id": "subheading",
            "label": "Subheading"
          },
          {
            "type": "text",
            "id": "title",
            "label": "Heading",
            "default": "Add a title or tagline"
          },
          {
            "type":  "range",
            "id": "heading_size",
            "label": "Heading size",
            "min": 50,
            "max": 200,
            "step": 10,
            "default": 140,
            "unit": "%"
          },
          {
            "type": "richtext",
            "id": "text",
            "label": "Text"
          },
          {
            "type": "range",
            "id": "text_size",
            "label": "Text size",
            "default": 100,
            "min": 75,
            "max": 175,
            "step": 5,
            "unit": "%"
          },
          {
            "type": "header",
            "content": "Button"
          },
          {
            "type": "text",
            "id": "button_text",
            "label": "Text",
            "default": "Button text"
          },
          {
            "type": "url",
            "id": "button_link",
            "label": "Link"
          },
          {
            "type": "select",
            "id": "button_color",
            "label": "Button color",
            "default": "btn--black",
            "options": [
              { "label": "Primary", "value": "btn--primary" },
              { "label": "Secondary", "value": "btn--secondary" },
              { "label": "White", "value": "btn--white" },
              { "label": "Black", "value": "btn--black" }
            ]
          },
          {
            "type": "select",
            "id": "button_style",
            "label": "Button style",
            "default": "btn--solid",
            "options": [
              { "label": "Solid", "value": "btn--solid" },
              { "label": "Outline", "value": "btn--outline" },
              { "label": "Solid with border", "value": "btn--solid-border" },
              { "label": "Text", "value": "btn--text" }
            ]
          },
          {
            "type": "select",
            "id": "button_size",
            "label": "Size",
            "default": "btn--large",
            "options": [
              { "label": "Large", "value": "btn--large" },
              { "label": "Medium", "value": "btn--medium" },
              { "label": "Small", "value": "btn--small" }
            ]
          },
          {
            "type": "header",
            "content": "Colors"
          },
          {
            "type": "color",
            "id": "bg_color",
            "label": "Background"
          },
          {
            "type": "select",
            "id": "text_color",
            "label": "Text",
            "default": "text-dark",
            "options": [
              {
                "value": "text-light",
                "label": "Light"
              },
              {
                "value": "text-dark",
                "label": "Dark"
              }
            ]
          }
        ]
      },
      {
        "type": "image",
        "name": "Image",
        "settings": [
          {
            "type": "range",
            "id": "column_width",
            "label": "Column width",
            "unit": "%",
            "min": 10,
            "max": 100,
            "step": 1,
            "default": 25,
            "info": "Desktop only"
          },
          {
            "type": "header",
            "content": "Image"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "type": "range",
            "id": "aspect_ratio_desktop",
            "min": 0.8,
            "max": 2,
            "step": 0.1,
            "unit": ":1",
            "label": "Image scaling ratio",
            "info": "Wide to tall",
            "default": 1.2
          },
          {
            "type": "range",
            "id": "aspect_ratio_mobile",
            "min": 0.8,
            "max": 2,
            "step": 0.1,
            "unit": ":1",
            "label": "Image scaling ratio (mobile)",
            "info": "Wide to tall",
            "default": 1
          },
          {
            "type": "header",
            "content": "Typography"
          },
          {
            "type": "text",
            "id": "title",
            "label": "Heading",
            "default": "Image title"
          },
          {
            "type":  "range",
            "id": "heading_size",
            "label": "Heading size",
            "min": 50,
            "max": 200,
            "step": 10,
            "default": 120,
            "unit": "%"
          },
          {
            "type": "richtext",
            "id": "text",
            "label": "Text"
          },
          {
            "type": "range",
            "id": "text_size",
            "label": "Text size",
            "default": 100,
            "min": 75,
            "max": 175,
            "step": 5,
            "unit": "%"
          },
          {
            "type": "header",
            "content": "Button"
          },
          {
            "type": "text",
            "id": "button_text",
            "label": "Text"
          },
          {
            "type": "url",
            "id": "button_link",
            "label": "Link"
          },
          {
            "type": "select",
            "id": "button_color",
            "label": "Button color",
            "default": "btn--black",
            "options": [
              { "label": "Primary", "value": "btn--primary" },
              { "label": "Secondary", "value": "btn--secondary" },
              { "label": "White", "value": "btn--white" },
              { "label": "Black", "value": "btn--black" }
            ]
          },
          {
            "type": "select",
            "id": "button_style",
            "label": "Button style",
            "default": "btn--solid",
            "options": [
              { "label": "Solid", "value": "btn--solid" },
              { "label": "Outline", "value": "btn--outline" },
              { "label": "Solid with border", "value": "btn--solid-border" },
              { "label": "Text", "value": "btn--text" }
            ]
          },
          {
            "type": "select",
            "id": "button_size",
            "label": "Size",
            "default": "btn--small",
            "options": [
              { "label": "Large", "value": "btn--large" },
              { "label": "Medium", "value": "btn--medium" },
              { "label": "Small", "value": "btn--small" }
            ]
          }
        ]
      },
      {
        "type": "menu",
        "name": "Menu",
        "settings": [
          {
            "type": "range",
            "id": "column_width",
            "label": "Column width",
            "unit": "%",
            "min": 10,
            "max": 100,
            "step": 1,
            "default": 25,
            "info": "Desktop only"
          },
          {
            "type": "link_list",
            "id": "menu",
            "label": "Select menu",
            "default": "main-menu"
          },
          {
            "type": "range",
            "id": "text_size",
            "label": "Text size",
            "default": 120,
            "min": 75,
            "max": 175,
            "step": 5,
            "unit": "%"
          }
        ]
      },
      {
        "type": "collection",
        "name": "Collection",
        "settings": [
          {
            "type": "range",
            "id": "column_width",
            "label": "Column width",
            "unit": "%",
            "min": 10,
            "max": 100,
            "step": 1,
            "default": 25,
            "info": "Desktop only"
          },
          {
            "type": "collection",
            "id": "collection",
            "label": "Collection"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },
          {
            "type": "range",
            "id": "aspect_ratio_desktop",
            "min": 0.8,
            "max": 2,
            "step": 0.1,
            "unit": ":1",
            "label": "Image scaling ratio",
            "info": "Wide to tall",
            "default": 1.2
          },
          {
            "type": "range",
            "id": "aspect_ratio_mobile",
            "min": 0.8,
            "max": 2,
            "step": 0.1,
            "unit": ":1",
            "label": "Image scaling ratio (mobile)",
            "info": "Wide to tall",
            "default": 1
          },
          {
            "type": "text",
            "id": "title",
            "label": "Heading"
          },
          {
            "type":  "range",
            "id": "heading_size",
            "label": "Heading size",
            "min": 50,
            "max": 200,
            "step": 10,
            "default": 120,
            "unit": "%"
          },
          {
            "type": "checkbox",
            "id": "show_products_count",
            "label": "Show number of products",
            "default": true
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Multicolumn",
        "category": "Text",
        "blocks": [
          {
            "type": "text",
            "settings": {
              "subheading": "The Essentials",
              "title": "Shop by Category",
              "button_text": "Shop all"
            }
          },
          {
            "type": "collection"
          },
          {
            "type": "collection"
          },
          {
            "type": "collection"
          }
        ]
      }
    ],
    "disabled_on": {
      "groups": ["header","aside"]
    }
  }
{% endschema %}
